@using DevExpress.Data
@using FinanceKpi.Models
@* DXCOMMENT: Configure GridView *@
@{
    int sum = 0;
}
    
@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "Refund", Action = "GridViewPartialView" };

        settings.KeyFieldName = "StepID";
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.SettingsPager.PageSize = 50;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 750;
        settings.Settings.ShowGroupPanel = true;
        settings.ControlStyle.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(0);
        settings.ControlStyle.Border.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(1);

        // DXCOMMENT: Configure grid's columns in accordance with data model fields
        settings.Columns.Add("ProcessName");
        settings.Columns.Add("FinAccount");
        settings.Columns.Add("ReceiveTime");
        settings.Columns.Add("Refunding");
        settings.Columns.Add("Refunded");

        settings.GroupSummary.Add(SummaryItemType.Count, "ProcessName").DisplayFormat = "流程数 = {0}";
        settings.GroupSummary.Add(new ASPxSummaryItem{SummaryType = SummaryItemType.Custom, FieldName = "Refunding", Tag = "1", DisplayFormat = "退单量 = {0}"});

        settings.CustomSummaryCalculate = (sender, e) =>
        {
            //var view = sender as MVCxGridView;
            if (e.SummaryProcess == CustomSummaryProcess.Start)
            {
                sum = 0;
            }
            if (e.SummaryProcess == CustomSummaryProcess.Calculate)
            {
                //var refunding = view.GetRowValues(e.RowHandle, "Refunding");// "退单";//view.rows.Rows[e.RowHandle].Cells[3].Text;
                var refund = e.Row as Refund;
                if (refund != null && refund.Refunding.Equals("退单"))
                {
                    ++sum;
                }
            }
            if (e.SummaryProcess == CustomSummaryProcess.Finalize)
            {
                e.TotalValue = sum;
            }
        };
    }).Bind(Model).GetHtml()
